// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 RAM8s, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=dm0, b=dm1, c=dm2, d=dm3, e=dm4, f=dm5, g=dm6, h=dm7);
    RAM8(in=in, load=dm0, out=ram0, address=address[0..2]);
    RAM8(in=in, load=dm1, out=ram1, address=address[0..2]);
    RAM8(in=in, load=dm2, out=ram2, address=address[0..2]);
    RAM8(in=in, load=dm3, out=ram3, address=address[0..2]);
    RAM8(in=in, load=dm4, out=ram4, address=address[0..2]);
    RAM8(in=in, load=dm5, out=ram5, address=address[0..2]);
    RAM8(in=in, load=dm6, out=ram6, address=address[0..2]);
    RAM8(in=in, load=dm7, out=ram7, address=address[0..2]);
    Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, sel=address[3..5], out=out);
}